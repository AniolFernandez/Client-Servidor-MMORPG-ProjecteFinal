-- MySQL Script generated by MySQL Workbench
-- Mon May 20 18:57:12 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mmorpg
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mmorpg
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mmorpg` DEFAULT CHARACTER SET utf8 ;
USE `mmorpg` ;

-- -----------------------------------------------------
-- Table `mmorpg`.`PENALTY`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mmorpg`.`PENALTY` (
  `penalty_id` INT NOT NULL AUTO_INCREMENT,
  `penalty_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`penalty_id`),
  UNIQUE INDEX `idPENALTY_UNIQUE` (`penalty_id` ASC) VISIBLE,
  UNIQUE INDEX `penalty_name_UNIQUE` (`penalty_name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mmorpg`.`USER_AUTHORITY`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mmorpg`.`USER_AUTHORITY` (
  `usr_auth_id` INT NOT NULL AUTO_INCREMENT,
  `auth_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`usr_auth_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mmorpg`.`USER`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mmorpg`.`USER` (
  `user_id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `password` CHAR(64) NOT NULL,
  `last_login` DATETIME NULL,
  `total_time_played` INT NULL,
  `USER_AUTHORITY_usr_auth_id` INT NOT NULL,
  PRIMARY KEY (`user_id`),
  UNIQUE INDEX `user_id_UNIQUE` (`user_id` ASC) VISIBLE,
  UNIQUE INDEX `username_UNIQUE` (`username` ASC) VISIBLE,
  INDEX `fk_USER_USER_AUTHORITY1_idx` (`USER_AUTHORITY_usr_auth_id` ASC) VISIBLE,
  CONSTRAINT `fk_USER_USER_AUTHORITY1`
    FOREIGN KEY (`USER_AUTHORITY_usr_auth_id`)
    REFERENCES `mmorpg`.`USER_AUTHORITY` (`usr_auth_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mmorpg`.`USER_has_PENALTY`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mmorpg`.`USER_has_PENALTY` (
  `PENALTY_penalty_id` INT NOT NULL,
  `USER_user_id` INT NOT NULL,
  `start_date` DATETIME NOT NULL,
  `end_date` DATETIME NOT NULL,
  `cause` VARCHAR(255) NULL,
  PRIMARY KEY (`PENALTY_penalty_id`, `USER_user_id`),
  INDEX `fk_PENALTY_has_USER_USER1_idx` (`USER_user_id` ASC) VISIBLE,
  INDEX `fk_PENALTY_has_USER_PENALTY_idx` (`PENALTY_penalty_id` ASC) VISIBLE,
  CONSTRAINT `fk_PENALTY_has_USER_PENALTY`
    FOREIGN KEY (`PENALTY_penalty_id`)
    REFERENCES `mmorpg`.`PENALTY` (`penalty_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PENALTY_has_USER_USER1`
    FOREIGN KEY (`USER_user_id`)
    REFERENCES `mmorpg`.`USER` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mmorpg`.`CLASS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mmorpg`.`CLASS` (
  `class_id` INT NOT NULL AUTO_INCREMENT,
  `class_name` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`class_id`),
  UNIQUE INDEX `class_name_UNIQUE` (`class_name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mmorpg`.`GUILD_AUTHORITY`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mmorpg`.`GUILD_AUTHORITY` (
  `guild_authority_id` INT NOT NULL AUTO_INCREMENT,
  `guild_authority_name` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`guild_authority_id`),
  UNIQUE INDEX `guild_authority_name_UNIQUE` (`guild_authority_name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mmorpg`.`GUILD`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mmorpg`.`GUILD` (
  `guild_id` INT NOT NULL AUTO_INCREMENT,
  `guild_name` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`guild_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mmorpg`.`HAS_GUILD`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mmorpg`.`HAS_GUILD` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `GUILD_AUTHORITY_guild_authority_id` INT NOT NULL,
  `GUILD_guild_id` INT NOT NULL,
  PRIMARY KEY (`id`, `GUILD_guild_id`),
  INDEX `fk_HAS_GUILD_GUILD_AUTHORITY1_idx` (`GUILD_AUTHORITY_guild_authority_id` ASC) VISIBLE,
  INDEX `fk_HAS_GUILD_GUILD1_idx` (`GUILD_guild_id` ASC) VISIBLE,
  CONSTRAINT `fk_HAS_GUILD_GUILD_AUTHORITY1`
    FOREIGN KEY (`GUILD_AUTHORITY_guild_authority_id`)
    REFERENCES `mmorpg`.`GUILD_AUTHORITY` (`guild_authority_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_HAS_GUILD_GUILD1`
    FOREIGN KEY (`GUILD_guild_id`)
    REFERENCES `mmorpg`.`GUILD` (`guild_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mmorpg`.`CHARACTER`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mmorpg`.`CHARACTER` (
  `character_id` INT NOT NULL AUTO_INCREMENT,
  `character_name` VARCHAR(20) NOT NULL,
  `character_level` INT NOT NULL,
  `character_current_xp` INT NOT NULL,
  `char_last_pos_x` FLOAT NOT NULL,
  `char_last_pos_y` FLOAT NOT NULL,
  `char_last_pos_z` FLOAT NOT NULL,
  `char_max_hp` INT NOT NULL,
  `char_max_mana` INT NOT NULL,
  `char_basic_damage` INT NOT NULL,
  `char_basic_defense` INT NOT NULL,
  `gold` FLOAT NOT NULL,
  `USER_user_id` INT NOT NULL,
  `CLASS_class_id` INT NOT NULL,
  `HAS_GUILD_id` INT NULL,
  `inactive` TINYINT NOT NULL DEFAULT 0,
  `char_curr_hp` INT NOT NULL,
  `char_curr_mana` INT NOT NULL,
  PRIMARY KEY (`character_id`),
  UNIQUE INDEX `name_UNIQUE` (`character_name` ASC) VISIBLE,
  INDEX `fk_CHARACTER_USER1_idx` (`USER_user_id` ASC) VISIBLE,
  INDEX `fk_CHARACTER_CLASS1_idx` (`CLASS_class_id` ASC) VISIBLE,
  INDEX `fk_CHARACTER_HAS_GUILD1_idx` (`HAS_GUILD_id` ASC) VISIBLE,
  CONSTRAINT `fk_CHARACTER_USER1`
    FOREIGN KEY (`USER_user_id`)
    REFERENCES `mmorpg`.`USER` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_CHARACTER_CLASS1`
    FOREIGN KEY (`CLASS_class_id`)
    REFERENCES `mmorpg`.`CLASS` (`class_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_CHARACTER_HAS_GUILD1`
    FOREIGN KEY (`HAS_GUILD_id`)
    REFERENCES `mmorpg`.`HAS_GUILD` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mmorpg`.`CHARACTER_has_CHARACTER`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mmorpg`.`CHARACTER_has_CHARACTER` (
  `CHARACTER_character_id` INT NOT NULL,
  `CHARACTER_character_id2` INT NOT NULL,
  PRIMARY KEY (`CHARACTER_character_id`, `CHARACTER_character_id2`),
  INDEX `fk_CHARACTER_has_CHARACTER_CHARACTER2_idx` (`CHARACTER_character_id2` ASC) VISIBLE,
  INDEX `fk_CHARACTER_has_CHARACTER_CHARACTER1_idx` (`CHARACTER_character_id` ASC) VISIBLE,
  CONSTRAINT `fk_CHARACTER_has_CHARACTER_CHARACTER1`
    FOREIGN KEY (`CHARACTER_character_id`)
    REFERENCES `mmorpg`.`CHARACTER` (`character_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_CHARACTER_has_CHARACTER_CHARACTER2`
    FOREIGN KEY (`CHARACTER_character_id2`)
    REFERENCES `mmorpg`.`CHARACTER` (`character_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mmorpg`.`ITEM_TYPE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mmorpg`.`ITEM_TYPE` (
  `item_type_id` INT NOT NULL AUTO_INCREMENT,
  `item_type_name` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`item_type_id`),
  UNIQUE INDEX `item_type_name_UNIQUE` (`item_type_name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mmorpg`.`ITEM`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mmorpg`.`ITEM` (
  `item_id` INT NOT NULL AUTO_INCREMENT,
  `item_name` VARCHAR(20) NOT NULL,
  `item_damage` INT NOT NULL,
  `item_defense` INT NOT NULL,
  `item_critical_chance` INT NOT NULL,
  `item_critical_damage` INT NOT NULL,
  `ITEM_TYPE_item_type_id` INT NOT NULL,
  PRIMARY KEY (`item_id`),
  UNIQUE INDEX `item_name_UNIQUE` (`item_name` ASC) VISIBLE,
  INDEX `fk_ITEM_ITEM_TYPE1_idx` (`ITEM_TYPE_item_type_id` ASC) VISIBLE,
  CONSTRAINT `fk_ITEM_ITEM_TYPE1`
    FOREIGN KEY (`ITEM_TYPE_item_type_id`)
    REFERENCES `mmorpg`.`ITEM_TYPE` (`item_type_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mmorpg`.`ITEM_has_CLASS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mmorpg`.`ITEM_has_CLASS` (
  `ITEM_item_id` INT NOT NULL,
  `CLASS_class_id` INT NOT NULL,
  PRIMARY KEY (`ITEM_item_id`, `CLASS_class_id`),
  INDEX `fk_ITEM_has_CLASS_CLASS1_idx` (`CLASS_class_id` ASC) VISIBLE,
  INDEX `fk_ITEM_has_CLASS_ITEM1_idx` (`ITEM_item_id` ASC) VISIBLE,
  CONSTRAINT `fk_ITEM_has_CLASS_ITEM1`
    FOREIGN KEY (`ITEM_item_id`)
    REFERENCES `mmorpg`.`ITEM` (`item_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ITEM_has_CLASS_CLASS1`
    FOREIGN KEY (`CLASS_class_id`)
    REFERENCES `mmorpg`.`CLASS` (`class_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mmorpg`.`NPC`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mmorpg`.`NPC` (
  `npc_id` INT NOT NULL AUTO_INCREMENT,
  `npc_name` VARCHAR(20) NOT NULL,
  `npc_level` INT NOT NULL,
  `max_hp` INT NOT NULL,
  `max_mana` INT NOT NULL,
  PRIMARY KEY (`npc_id`),
  UNIQUE INDEX `npc_name_UNIQUE` (`npc_name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mmorpg`.`NPC_has_ITEM`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mmorpg`.`NPC_has_ITEM` (
  `NPC_npc_id` INT NOT NULL,
  `ITEM_item_id` INT NOT NULL,
  PRIMARY KEY (`NPC_npc_id`, `ITEM_item_id`),
  INDEX `fk_NPC_has_ITEM_ITEM1_idx` (`ITEM_item_id` ASC) VISIBLE,
  INDEX `fk_NPC_has_ITEM_NPC1_idx` (`NPC_npc_id` ASC) VISIBLE,
  CONSTRAINT `fk_NPC_has_ITEM_NPC1`
    FOREIGN KEY (`NPC_npc_id`)
    REFERENCES `mmorpg`.`NPC` (`npc_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_NPC_has_ITEM_ITEM1`
    FOREIGN KEY (`ITEM_item_id`)
    REFERENCES `mmorpg`.`ITEM` (`item_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mmorpg`.`NPC_INSTANCE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mmorpg`.`NPC_INSTANCE` (
  `npc_instance_id` INT NOT NULL AUTO_INCREMENT,
  `position_x` FLOAT NOT NULL,
  `position_y` FLOAT NOT NULL,
  `position_z` FLOAT NOT NULL,
  `NPC_npc_id` INT NOT NULL,
  PRIMARY KEY (`npc_instance_id`),
  INDEX `fk_NPC_INSTANCE_NPC1_idx` (`NPC_npc_id` ASC) VISIBLE,
  CONSTRAINT `fk_NPC_INSTANCE_NPC1`
    FOREIGN KEY (`NPC_npc_id`)
    REFERENCES `mmorpg`.`NPC` (`npc_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mmorpg`.`LOCATION_TYPE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mmorpg`.`LOCATION_TYPE` (
  `location_type_id` INT NOT NULL AUTO_INCREMENT,
  `location_name` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`location_type_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mmorpg`.`RARITY`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mmorpg`.`RARITY` (
  `rarity_id` INT NOT NULL AUTO_INCREMENT,
  `damage_buff` INT NOT NULL,
  `defense_buff` INT NOT NULL,
  PRIMARY KEY (`rarity_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mmorpg`.`UNIQUE_ITEM`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mmorpg`.`UNIQUE_ITEM` (
  `unique_item_id` INT NOT NULL AUTO_INCREMENT,
  `damage_buff` INT NOT NULL,
  `defense_buff` INT NOT NULL,
  `position_X` FLOAT NOT NULL,
  `position_Y` FLOAT NOT NULL,
  `position_Z` FLOAT NOT NULL,
  `upgrade` INT NOT NULL,
  `ITEM_item_id` INT NOT NULL,
  `LOCATION_TYPE_location_type_id` INT NOT NULL,
  `RARITY_rarity_id` INT NOT NULL,
  `CHARACTER_character_id` INT NOT NULL,
  PRIMARY KEY (`unique_item_id`),
  INDEX `fk_UNIQUE_ITEM_ITEM1_idx` (`ITEM_item_id` ASC) VISIBLE,
  INDEX `fk_UNIQUE_ITEM_LOCATION_TYPE1_idx` (`LOCATION_TYPE_location_type_id` ASC) VISIBLE,
  INDEX `fk_UNIQUE_ITEM_RARITY1_idx` (`RARITY_rarity_id` ASC) VISIBLE,
  INDEX `fk_UNIQUE_ITEM_CHARACTER1_idx` (`CHARACTER_character_id` ASC) VISIBLE,
  CONSTRAINT `fk_UNIQUE_ITEM_ITEM1`
    FOREIGN KEY (`ITEM_item_id`)
    REFERENCES `mmorpg`.`ITEM` (`item_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_UNIQUE_ITEM_LOCATION_TYPE1`
    FOREIGN KEY (`LOCATION_TYPE_location_type_id`)
    REFERENCES `mmorpg`.`LOCATION_TYPE` (`location_type_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_UNIQUE_ITEM_RARITY1`
    FOREIGN KEY (`RARITY_rarity_id`)
    REFERENCES `mmorpg`.`RARITY` (`rarity_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_UNIQUE_ITEM_CHARACTER1`
    FOREIGN KEY (`CHARACTER_character_id`)
    REFERENCES `mmorpg`.`CHARACTER` (`character_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;



INSERT INTO mmorpg.user_authority VALUES (1,'user');

INSERT INTO mmorpg.class VALUES (1,'Swordsman');
INSERT INTO mmorpg.class VALUES (2,'Archer');
INSERT INTO mmorpg.class VALUES (3,'Magician');

INSERT INTO mmorpg.npc VALUES (1, "Nailer", 5, 100, 100);

INSERT INTO mmorpg.npc_instance (position_x, position_y, position_z, NPC_npc_id) VALUES (-67.01, 5.69, 8.65, 1);
INSERT INTO mmorpg.npc_instance (position_x, position_y, position_z, NPC_npc_id) VALUES (-79.44, 7.96, 0.65, 1);
INSERT INTO mmorpg.npc_instance (position_x, position_y, position_z, NPC_npc_id) VALUES (-84.65, 9.20, -13.32, 1);
INSERT INTO mmorpg.npc_instance (position_x, position_y, position_z, NPC_npc_id) VALUES (-101.40, 16.51, -5.25, 1);
INSERT INTO mmorpg.npc_instance (position_x, position_y, position_z, NPC_npc_id) VALUES (-95.58, 16.54, 10.13, 1);
INSERT INTO mmorpg.npc_instance (position_x, position_y, position_z, NPC_npc_id) VALUES (-92.06, 17.99, 19.82, 1);
INSERT INTO mmorpg.npc_instance (position_x, position_y, position_z, NPC_npc_id) VALUES (30.43, 2.20, -23.43, 1);
INSERT INTO mmorpg.npc_instance (position_x, position_y, position_z, NPC_npc_id) VALUES (23.97, 0.84, -39.72, 1);
INSERT INTO mmorpg.npc_instance (position_x, position_y, position_z, NPC_npc_id) VALUES (37.00, 3.86, -46.19, 1);
INSERT INTO mmorpg.npc_instance (position_x, position_y, position_z, NPC_npc_id) VALUES (54.33, 7.61, -35.09, 1);
INSERT INTO mmorpg.npc_instance (position_x, position_y, position_z, NPC_npc_id) VALUES (48.87, 5.41, -11.57, 1);
INSERT INTO mmorpg.npc_instance (position_x, position_y, position_z, NPC_npc_id) VALUES (35.72, 2.85, -10.07, 1);